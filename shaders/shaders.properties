#shaders/shaders.properties

#Minecraft Settings
oldLighting=false
underwaterOverlay = false
stars=false
vignette=false
dynamicHandLight=true

#ifdef DRAW_SUN
sun=false
#else
sun=true
#endif

#ifdef DRAW_MOON
moon=false
#else
moon=true
#endif

# fix for SKY_REFLECTION from composite.fsh for particles
particles.before.deferred=true

screen=[Atmospherics] [Shadows] [Postprocessing] SKY_REFLECTIONS

screen.Postprocessing = BLOOM BLOOM_FINAL_BRIGHTNESS SHARPENING SHARPENING_STRENGTH DESATURATE RETRO_FILTER TONEMAP FXAA [Blur]

screen.Blur = BLUR_1STPASS_RESOLUTION BLUR_1STPASS_SAMPLES BLUR_1STPASS_OFFSET_MULTIPLIER BLUR_1STPASS_STEP_STRENGTH_MULTIPLIER BLUR_2NDPASS_RESOLUTION BLUR_2NDPASS_SAMPLES BLUR_2NDPASS_OFFSET_MULTIPLIER BLUR_2NDPASS_STEP_STRENGTH_MULTIPLIER

screen.Shadows=shadowMapResolution SHADOW_FILTERING SHADOW_FILTERING_QUALITY SHADOW_FILTERING_SOFTNESS COLORED_SHADOWS WATER_SHADOW

screen.Atmospherics = [Clouds] [Fog] DRAW_SUN SUN_GLOW

screen.Clouds = VOLUMETRIC_CLOUDS VOLUMETRIC_CLOUDS_SAMPLE_SIZE VOLUMETRIC_CLOUDS_DENSITY VOLUMETRIC_CLOUDS_DITHERING_STRENGTH VOLUMETRIC_CLOUDS_NOISE_SAMPLES VOLUMETRIC_CLOUDS_RESOLUTION VOLUMETRIC_CLOUDS_ADAPTIVE_STEP_SIZE VOLUMETRIC_CLOUDS_ADAPTIVE_STEP_SIZE_MULTIPLIER VOLUMETRIC_CLOUDS_HEIGHT VOLUMETRIC_CLOUDS_USE_LOD

screen.Fog = FOG FOG_DENSITY FOG_PLAYER_EFFECTS

sliders= VOLUMETRIC_CLOUDS_ADAPTIVE_STEP_SIZE_MULTIPLIER VOLUMETRIC_CLOUDS_SAMPLE_SIZE VOLUMETRIC_CLOUDS_DENSITY VOLUMETRIC_CLOUDS_DITHERING_STRENGTH VOLUMETRIC_CLOUDS_NOISE_SAMPLES VOLUMETRIC_CLOUDS_RESOLUTION VOLUMETRIC_CLOUDS_HEIGHT SHADOW_FILTERING_QUALITY SHADOW_FILTERING_SOFTNESS BLUR_1STPASS_RESOLUTION BLUR_1STPASS_STEP_STRENGTH_MULTIPLIER BLUR_2NDPASS_RESOLUTION BLUR_2NDPASS_STEP_STRENGTH_MULTIPLIER FOG_DENSITY BLUR_1STPASS_SAMPLES BLUR_1STPASS_OFFSET_MULTIPLIER BLUR_2NDPASS_SAMPLES BLUR_2NDPASS_OFFSET_MULTIPLIER BLOOM_FINAL_BRIGHTNESS SHARPENING_STRENGTH shadowMapResolution

variable.float.texelSizeX = 1.0/viewWidth
variable.float.texelSizeY = 1.0/viewHeight
uniform.vec2.texelSize=vec2(texelSizeX,texelSizeY)
